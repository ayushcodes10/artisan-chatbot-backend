version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    networks:
      - backend

  zookeeper:
    image: zookeeper:3.8.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE  # Ensure this matches one of the advertised listeners
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MESSAGE_MAX_BYTES: 2000000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 2000000000
      KAFKA_FETCH_MESSAGE_MAX_BYTES: 2000000000
    depends_on:
      - zookeeper
    networks:
      - backend

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chatbot_app
    environment:
      POSTGRES_URL: ${POSTGRES_URL}
      REDIS_URL: ${REDIS_URL}
      KAFKA_BROKER: ${KAFKA_BROKER}
    depends_on:
      - redis
      - kafka
    ports:
      - "8000:8000"
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
